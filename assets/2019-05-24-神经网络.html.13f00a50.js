import{_ as o,a as e,o as c,c as l,f as n,b as p,F as u,x as t,d as s}from"./app.3547d211.js";const r={},i=t('<h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p>Here&#39;s something that might surprise you:neral networks aren&#39;t that complicated! The term &quot;neral network&quot; gets used as a buzzword a lot, but in reality they&#39;re often much simpler than people imagine.</p><p>This post is intended for complete beginners and assumes ZERO prior knowledge of machine learning. We&#39;ll understand how neual networks work while implementing one from scratch in Python.</p><p>Let&#39;s get started!</p><p>Deep Learning\u662FMachine Learning\u7684\u4E00\u4E2A\u5206\u652F\uFF0C\u80FD\u591F\u8BA9\u673A\u5668\u81EA\u52A8\u5B66\u4E60\u826F\u597D\u7684\u7279\u5F81\uFF0C\u4ECE\u800C\u514D\u53BB\u4EBA\u5DE5\u9009\u53D6\u8FC7\u7A0B\u3002</p><p>Deep Learning\u7684\u57FA\u672C\u601D\u60F3\u6765\u81EA\u795E\u7ECF\u751F\u7269\u5B66\u8868\u660E\u5927\u8111\u795E\u7ECF\u7CFB\u7EDF\u5904\u7406\u662F\u4EE5\u5206\u5C42\u7684\u65B9\u5F0F\u6765\u5904\u7406\u4FE1\u606F\u7684\uFF0C\u5373\u9AD8\u5C42\u7684\u7279\u5F81\u662F\u4F4E\u5C42\u7279\u5F81\u7684\u7EC4\u5408\uFF0C\u4ECE\u4F4E\u5C42\u5230\u9AD8\u5C42\u7684\u7279\u5F81\u8868\u793A\u8D8A\u6765\u8D8A\u62BD\u8C61\uFF0C\u8D8A\u6765\u8D8A\u80FD\u8868\u73B0\u8BED\u4E49\u6216\u8005\u610F\u56FE\u3002\u6DF1\u5EA6\u5B66\u4E60\u501F\u9274\u8FD9\u79CD\u5206\u5C42\u7684\u4FE1\u606F\u5904\u7406\u65B9\u5F0F\uFF0C\u5176\u542B\u6709\u591A\u4E2A\u5C42\uFF0C\u5C06\u5F53\u524D\u5C42\u5F53\u4F5C\u4E0B\u4E00\u5C42\u7684\u8F93\u5165\uFF0C\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\u5B9E\u73B0\u5BF9\u8F93\u5165\u4FE1\u606F\u8FDB\u884C\u5206\u7EA7\u8868\u8FBE\u548C\u7279\u5F81\u63D0\u53D6\u3002</p><p>\u7B2C\u4E00\u4E2A\u6587\u4EF6\u662F\u795E\u7ECF\u7F51\u7EDC\u5404\u4E2A\u90E8\u5206\u7684\u7B80\u5355\u63CF\u8FF0\uFF1B\u7B2C\u4E8C\u4E2A\u6587\u4EF6\u662F\u57FA\u4E8E\u5411\u91CF\u7684\u53CD\u5411\u4F20\u64AD\u7B97\u6CD5\u7684\u7406\u8BBA\u77E5\u8BC6\u548C\u4EE3\u7801</p><h2 id="\u5B66\u4E60\u7B14\u8BB0-latex\u7248\u672C" tabindex="-1"><a class="header-anchor" href="#\u5B66\u4E60\u7B14\u8BB0-latex\u7248\u672C" aria-hidden="true">#</a> \u5B66\u4E60\u7B14\u8BB0\uFF0CLaTeX\u7248\u672C</h2>',8),k=s("An Introduction to Neural Network "),b={href:"https://drive.google.com/open?id=1ftdFNvsApc7FR2BRiFalXqiScSWS1MzZ",target:"_blank",rel:"noopener noreferrer"},m=s("\u5B66\u4E60\u7B14\u8BB0"),d=s(","),_=s("\u57FA\u4E8E\u5411\u91CF\u7684\u53CD\u5411\u4F20\u64AD\u7B97\u6CD5"),h={href:"https://drive.google.com/open?id=1c--_erzAsUtTY-4Z1QN31DS1hw_V1stN",target:"_blank",rel:"noopener noreferrer"},w=s("\u5B66\u4E60\u7B14\u8BB0"),y=t(`<h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2><h3 id="\u7B2C\u4E00\u4E2A\u6587\u4EF6\u9644\u5F55\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u4E2A\u6587\u4EF6\u9644\u5F55\u4EE3\u7801" aria-hidden="true">#</a> \u7B2C\u4E00\u4E2A\u6587\u4EF6\u9644\u5F55\u4EE3\u7801\uFF1A</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">def</span> <span class="token function">sigmoid</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token comment"># Sigmoid activation function: f(x) = 1 / (1 + e^(-x))</span>
  <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">deriv_sigmoid</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token comment"># Derivative of sigmoid: f&#39;(x) = f(x) * (1 - f(x))</span>
  fx <span class="token operator">=</span> sigmoid<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
  <span class="token keyword">return</span> fx <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> fx<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">mse_loss</span><span class="token punctuation">(</span>y_true<span class="token punctuation">,</span> y_pred<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token comment"># y_true and y_pred are numpy arrays of the same length.</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>y_true <span class="token operator">-</span> y_pred<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">OurNeuralNetwork</span><span class="token punctuation">:</span>
  <span class="token triple-quoted-string string">&#39;&#39;&#39;
  A neural network with:
    - 2 inputs
    - a hidden layer with 2 neurons (h1, h2)
    - an output layer with 1 neuron (o1)

  *** DISCLAIMER ***:
  The code below is intended to be simple and educational, NOT optimal.
  Real neural net code looks nothing like this. DO NOT use this code.
  Instead, read/run it to understand how this specific network works.
  &#39;&#39;&#39;</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Weights</span>
    self<span class="token punctuation">.</span>w1 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>w2 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>w3 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>w4 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>w5 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>w6 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># Biases</span>
    self<span class="token punctuation">.</span>b1 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>b2 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>b3 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">def</span> <span class="token function">feedforward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># x is a numpy array with 2 elements.</span>
    h1 <span class="token operator">=</span> sigmoid<span class="token punctuation">(</span>self<span class="token punctuation">.</span>w1 <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>w2 <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>b1<span class="token punctuation">)</span>
    h2 <span class="token operator">=</span> sigmoid<span class="token punctuation">(</span>self<span class="token punctuation">.</span>w3 <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>w4 <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>b2<span class="token punctuation">)</span>
    o1 <span class="token operator">=</span> sigmoid<span class="token punctuation">(</span>self<span class="token punctuation">.</span>w5 <span class="token operator">*</span> h1 <span class="token operator">+</span> self<span class="token punctuation">.</span>w6 <span class="token operator">*</span> h2 <span class="token operator">+</span> self<span class="token punctuation">.</span>b3<span class="token punctuation">)</span>
    <span class="token keyword">return</span> o1

  <span class="token keyword">def</span> <span class="token function">train</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">,</span> all_y_trues<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&#39;&#39;&#39;
    - data is a (n x 2) numpy array, n = # of samples in the dataset.
    - all_y_trues is a numpy array with n elements.
      Elements in all_y_trues correspond to those in data.
    &#39;&#39;&#39;</span>
    learn_rate <span class="token operator">=</span> <span class="token number">0.1</span>
    epochs <span class="token operator">=</span> <span class="token number">1000</span> <span class="token comment"># number of times to loop through the entire dataset</span>

    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token keyword">for</span> x<span class="token punctuation">,</span> y_true <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> all_y_trues<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># --- Do a feedforward (we&#39;ll need these values later)</span>
        sum_h1 <span class="token operator">=</span> self<span class="token punctuation">.</span>w1 <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>w2 <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>b1
        h1 <span class="token operator">=</span> sigmoid<span class="token punctuation">(</span>sum_h1<span class="token punctuation">)</span>

        sum_h2 <span class="token operator">=</span> self<span class="token punctuation">.</span>w3 <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>w4 <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>b2
        h2 <span class="token operator">=</span> sigmoid<span class="token punctuation">(</span>sum_h2<span class="token punctuation">)</span>

        sum_o1 <span class="token operator">=</span> self<span class="token punctuation">.</span>w5 <span class="token operator">*</span> h1 <span class="token operator">+</span> self<span class="token punctuation">.</span>w6 <span class="token operator">*</span> h2 <span class="token operator">+</span> self<span class="token punctuation">.</span>b3
        o1 <span class="token operator">=</span> sigmoid<span class="token punctuation">(</span>sum_o1<span class="token punctuation">)</span>
        y_pred <span class="token operator">=</span> o1

        <span class="token comment"># --- Calculate partial derivatives.</span>
        <span class="token comment"># --- Naming: d_L_d_w1 represents &quot;partial L / partial w1&quot;</span>
        d_L_d_ypred <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>y_true <span class="token operator">-</span> y_pred<span class="token punctuation">)</span>

        <span class="token comment"># Neuron o1</span>
        d_ypred_d_w5 <span class="token operator">=</span> h1 <span class="token operator">*</span> deriv_sigmoid<span class="token punctuation">(</span>sum_o1<span class="token punctuation">)</span>
        d_ypred_d_w6 <span class="token operator">=</span> h2 <span class="token operator">*</span> deriv_sigmoid<span class="token punctuation">(</span>sum_o1<span class="token punctuation">)</span>
        d_ypred_d_b3 <span class="token operator">=</span> deriv_sigmoid<span class="token punctuation">(</span>sum_o1<span class="token punctuation">)</span>

        d_ypred_d_h1 <span class="token operator">=</span> self<span class="token punctuation">.</span>w5 <span class="token operator">*</span> deriv_sigmoid<span class="token punctuation">(</span>sum_o1<span class="token punctuation">)</span>
        d_ypred_d_h2 <span class="token operator">=</span> self<span class="token punctuation">.</span>w6 <span class="token operator">*</span> deriv_sigmoid<span class="token punctuation">(</span>sum_o1<span class="token punctuation">)</span>

        <span class="token comment"># Neuron h1</span>
        d_h1_d_w1 <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> deriv_sigmoid<span class="token punctuation">(</span>sum_h1<span class="token punctuation">)</span>
        d_h1_d_w2 <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> deriv_sigmoid<span class="token punctuation">(</span>sum_h1<span class="token punctuation">)</span>
        d_h1_d_b1 <span class="token operator">=</span> deriv_sigmoid<span class="token punctuation">(</span>sum_h1<span class="token punctuation">)</span>

        <span class="token comment"># Neuron h2</span>
        d_h2_d_w3 <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> deriv_sigmoid<span class="token punctuation">(</span>sum_h2<span class="token punctuation">)</span>
        d_h2_d_w4 <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> deriv_sigmoid<span class="token punctuation">(</span>sum_h2<span class="token punctuation">)</span>
        d_h2_d_b2 <span class="token operator">=</span> deriv_sigmoid<span class="token punctuation">(</span>sum_h2<span class="token punctuation">)</span>

        <span class="token comment"># --- Update weights and biases</span>
        <span class="token comment"># Neuron h1</span>
        self<span class="token punctuation">.</span>w1 <span class="token operator">-=</span> learn_rate <span class="token operator">*</span> d_L_d_ypred <span class="token operator">*</span> d_ypred_d_h1 <span class="token operator">*</span> d_h1_d_w1
        self<span class="token punctuation">.</span>w2 <span class="token operator">-=</span> learn_rate <span class="token operator">*</span> d_L_d_ypred <span class="token operator">*</span> d_ypred_d_h1 <span class="token operator">*</span> d_h1_d_w2
        self<span class="token punctuation">.</span>b1 <span class="token operator">-=</span> learn_rate <span class="token operator">*</span> d_L_d_ypred <span class="token operator">*</span> d_ypred_d_h1 <span class="token operator">*</span> d_h1_d_b1

        <span class="token comment"># Neuron h2</span>
        self<span class="token punctuation">.</span>w3 <span class="token operator">-=</span> learn_rate <span class="token operator">*</span> d_L_d_ypred <span class="token operator">*</span> d_ypred_d_h2 <span class="token operator">*</span> d_h2_d_w3
        self<span class="token punctuation">.</span>w4 <span class="token operator">-=</span> learn_rate <span class="token operator">*</span> d_L_d_ypred <span class="token operator">*</span> d_ypred_d_h2 <span class="token operator">*</span> d_h2_d_w4
        self<span class="token punctuation">.</span>b2 <span class="token operator">-=</span> learn_rate <span class="token operator">*</span> d_L_d_ypred <span class="token operator">*</span> d_ypred_d_h2 <span class="token operator">*</span> d_h2_d_b2

        <span class="token comment"># Neuron o1</span>
        self<span class="token punctuation">.</span>w5 <span class="token operator">-=</span> learn_rate <span class="token operator">*</span> d_L_d_ypred <span class="token operator">*</span> d_ypred_d_w5
        self<span class="token punctuation">.</span>w6 <span class="token operator">-=</span> learn_rate <span class="token operator">*</span> d_L_d_ypred <span class="token operator">*</span> d_ypred_d_w6
        self<span class="token punctuation">.</span>b3 <span class="token operator">-=</span> learn_rate <span class="token operator">*</span> d_L_d_ypred <span class="token operator">*</span> d_ypred_d_b3

      <span class="token comment"># --- Calculate total loss at the end of each epoch</span>
      <span class="token keyword">if</span> epoch <span class="token operator">%</span> <span class="token number">10</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        y_preds <span class="token operator">=</span> np<span class="token punctuation">.</span>apply_along_axis<span class="token punctuation">(</span>self<span class="token punctuation">.</span>feedforward<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
        loss <span class="token operator">=</span> mse_loss<span class="token punctuation">(</span>all_y_trues<span class="token punctuation">,</span> y_preds<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Epoch %d loss: %.3f&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>epoch<span class="token punctuation">,</span> loss<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Define dataset</span>
data <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment"># Alice</span>
  <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>   <span class="token comment"># Bob</span>
  <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>   <span class="token comment"># Charlie</span>
  <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment"># Diana</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
all_y_trues <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment"># Alice</span>
  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment"># Bob</span>
  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment"># Charlie</span>
  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment"># Diana</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># Train our neural network!</span>
network <span class="token operator">=</span> OurNeuralNetwork<span class="token punctuation">(</span><span class="token punctuation">)</span>
network<span class="token punctuation">.</span>train<span class="token punctuation">(</span>data<span class="token punctuation">,</span> all_y_trues<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br></div></div><h3 id="\u7B2C\u4E8C\u4E2A\u6587\u4EF6\u9644\u5F55\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u4E2A\u6587\u4EF6\u9644\u5F55\u4EE3\u7801" aria-hidden="true">#</a> \u7B2C\u4E8C\u4E2A\u6587\u4EF6\u9644\u5F55\u4EE3\u7801\uFF1A</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token comment"># generate data</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
X <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">12288</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment"># X is [12288 x 200] </span>
Y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>

<span class="token comment"># setup configuration of the network&#39;</span>
n0<span class="token punctuation">,</span> m <span class="token operator">=</span> X<span class="token punctuation">.</span>shape
n1 <span class="token operator">=</span> <span class="token number">20</span>
n2 <span class="token operator">=</span> <span class="token number">7</span>
n3 <span class="token operator">=</span> <span class="token number">5</span>
n4 <span class="token operator">=</span> <span class="token number">1</span>
layers_dims <span class="token operator">=</span> <span class="token punctuation">[</span>n0<span class="token punctuation">,</span> n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> n3<span class="token punctuation">,</span> n4<span class="token punctuation">]</span> <span class="token comment">#[12288, 20, 7, 5, 1]</span>
L <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>layers_dims<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment"># the number of layers, excluding the input layer</span>

<span class="token comment"># activation function</span>
<span class="token keyword">def</span> <span class="token function">sigmoid</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&#39;&#39;&#39;
    z is the prev_activation, with sizze n1xm
    &#39;&#39;&#39;</span>
    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># the relu</span>
<span class="token keyword">def</span> <span class="token function">relu</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&#39;&#39;&#39;
    z is the prev_activation, with sizze n1xm
    &#39;&#39;&#39;</span>
    <span class="token keyword">return</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>z<span class="token punctuation">)</span>

param_w <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
param_b <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment"># neural network model</span>
<span class="token keyword">def</span> <span class="token function">neural_network</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> learning_rate<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">,</span> num_iterations<span class="token operator">=</span><span class="token number">2000</span><span class="token punctuation">,</span> lambd <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    m <span class="token operator">=</span> X<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token comment"># initialize forward prop</span>
    <span class="token comment">#param_w = [i for i in range(L+1)]</span>
    <span class="token comment">#param_b = [i for i in range(L+1)]</span>
    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> l <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> l <span class="token operator">&lt;</span> L<span class="token punctuation">:</span>
            <span class="token comment"># use He initialization</span>
            param_w<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>layers_dims<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> layers_dims<span class="token punctuation">[</span>l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">/</span> layers_dims<span class="token punctuation">[</span>l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> l <span class="token operator">==</span> L<span class="token punctuation">:</span>
            param_w<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>layers_dims<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> layers_dims<span class="token punctuation">[</span>l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.01</span>
        param_b<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>layers_dims<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    activations <span class="token operator">=</span> <span class="token punctuation">[</span>X<span class="token punctuation">,</span> <span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">]</span>
    prev_activations <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

    dA <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    dz <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    dw <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    db <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>num_iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">### forward propagation</span>
        <span class="token keyword">for</span> l <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            prev_activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>param_w<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> activations<span class="token punctuation">[</span>l<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> param_b<span class="token punctuation">[</span>l<span class="token punctuation">]</span>
            <span class="token keyword">if</span> l <span class="token operator">&lt;</span> L<span class="token punctuation">:</span>
                activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> relu<span class="token punctuation">(</span>prev_activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> sigmoid<span class="token punctuation">(</span>prev_activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span>

        cross_entropy_cost <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token operator">/</span>m <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>log<span class="token punctuation">(</span>activations<span class="token punctuation">[</span>L<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Y<span class="token punctuation">.</span>T<span class="token punctuation">)</span> \\
                                     <span class="token operator">+</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>activations<span class="token punctuation">[</span>L<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">-</span>Y<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token punctuation">)</span>
        regularization_cost <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> l <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            regularization_cost <span class="token operator">+=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>square<span class="token punctuation">(</span>param_w<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> lambd<span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>m<span class="token punctuation">)</span>
        cost <span class="token operator">=</span> cross_entropy_cost <span class="token operator">+</span> regularization_cost

        <span class="token comment">### initialize backward propagation</span>
        dA<span class="token punctuation">[</span>L<span class="token punctuation">]</span> <span class="token operator">=</span>  np<span class="token punctuation">.</span>divide<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>Y<span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">-</span>activations<span class="token punctuation">[</span>L<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>divide<span class="token punctuation">(</span>Y<span class="token punctuation">,</span> activations<span class="token punctuation">[</span>L<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">assert</span> dA<span class="token punctuation">[</span>L<span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span>

        <span class="token comment">### backward propagation</span>
        <span class="token keyword">for</span> l <span class="token keyword">in</span> <span class="token builtin">reversed</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> L<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> l <span class="token operator">==</span> L<span class="token punctuation">:</span>
                dz<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> dA<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">*</span> activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                dz<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> dA<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
                dz<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">[</span>prev_activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>

            dw<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span>m <span class="token operator">*</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>dz<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> activations<span class="token punctuation">[</span>l<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token operator">+</span> param_w<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">*</span> lambd<span class="token operator">/</span>m
            db<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span>m <span class="token operator">*</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>dz<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> keepdims<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            dA<span class="token punctuation">[</span>l<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>param_w<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">.</span>T<span class="token punctuation">,</span> dz<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span>

            <span class="token keyword">assert</span> dz<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token operator">==</span> prev_activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">.</span>shape
            <span class="token keyword">assert</span> dw<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token operator">==</span> param_w<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">.</span>shape
            <span class="token keyword">assert</span> db<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token operator">==</span> param_b<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">.</span>shape
            <span class="token keyword">assert</span> dA<span class="token punctuation">[</span>l<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token operator">==</span> activations<span class="token punctuation">[</span>l<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape

            param_w<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> param_w<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">-</span> learning_rate <span class="token operator">*</span> dw<span class="token punctuation">[</span>l<span class="token punctuation">]</span>
            param_b<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> param_b<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">-</span> learning_rate <span class="token operator">*</span> db<span class="token punctuation">[</span>l<span class="token punctuation">]</span>

        <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;cost after iteration {}: {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> cost<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span>param_w<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>param_b<span class="token punctuation">)</span>
neural_network<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> learning_rate<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">,</span> num_iterations<span class="token operator">=</span><span class="token number">2000</span><span class="token punctuation">,</span> lambd <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
# predict
def predict(X_new, parameters, threshold=0.5):
    param_w = parameters[&quot;param_w&quot;]
    param_b = parameters[&quot;param_b&quot;]

    activations = [X_new, ] + [i for i in range(L)]
    prev_activations = [i for i in range(L + 1)]
    m = X_new.shape[1]

    for l in range(1, L + 1):
        prev_activations[l] = np.dot(param_w[l], activations[l - 1]) + param_b[l]
        if l &lt; L:
            activations[l] = relu(prev_activations[l])
        else:
            activations[l] = sigmoid(prev_activations[l])
    prediction = (activations[L] &gt; threshold).astype(&quot;int&quot;)
    return prediction
&#39;&#39;&#39;</span>

<span class="token comment"># predict</span>
<span class="token keyword">def</span> <span class="token function">predict</span><span class="token punctuation">(</span>X_new<span class="token punctuation">,</span> param_w<span class="token punctuation">,</span>param_b<span class="token punctuation">,</span>threshold<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#param_w = parameters[&quot;param_w&quot;]</span>
    <span class="token comment">#param_b = parameters[&quot;param_b&quot;]</span>

    activations <span class="token operator">=</span> <span class="token punctuation">[</span>X_new<span class="token punctuation">,</span> <span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">]</span>
    prev_activations <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>L <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    m <span class="token operator">=</span> X_new<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>

    <span class="token keyword">for</span> l <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> L <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        prev_activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>param_w<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> activations<span class="token punctuation">[</span>l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> param_b<span class="token punctuation">[</span>l<span class="token punctuation">]</span>
        <span class="token keyword">if</span> l <span class="token operator">&lt;</span> L<span class="token punctuation">:</span>
            activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> relu<span class="token punctuation">(</span>prev_activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> sigmoid<span class="token punctuation">(</span>prev_activations<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span>
    prediction <span class="token operator">=</span> <span class="token punctuation">(</span>activations<span class="token punctuation">[</span>L<span class="token punctuation">]</span> <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&quot;int&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>prediction<span class="token punctuation">)</span>
    <span class="token keyword">return</span> prediction

X_new <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">12288</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>predict<span class="token punctuation">(</span>X_new<span class="token punctuation">,</span>param_w<span class="token punctuation">,</span>param_b<span class="token punctuation">,</span> threshold<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br></div></div>`,5),f=s("\u672C\u6587\u9996\u6B21\u53D1\u5E03\u4E8E "),g={href:"http://ZhaoYLong.github.io",target:"_blank",rel:"noopener noreferrer"},v=s("ZhaoYLng Blog"),L=s(", \u4F5C\u8005 "),x={href:"http://github.com/ZhaoYLong",target:"_blank",rel:"noopener noreferrer"},q=s("@Laqudee"),z=s(" ,\u8F6C\u8F7D\u8BF7\u4FDD\u7559\u539F\u6587\u94FE\u63A5.");function N(X,A){const a=e("ExternalLinkIcon");return c(),l(u,null,[i,n("blockquote",null,[n("p",null,[k,n("a",b,[m,p(a)]),d])]),n("blockquote",null,[n("p",null,[_,n("a",h,[w,p(a)])])]),y,n("blockquote",null,[n("p",null,[f,n("a",g,[v,p(a)]),L,n("a",x,[q,p(a)]),z])])],64)}var Y=o(r,[["render",N],["__file","2019-05-24-\u795E\u7ECF\u7F51\u7EDC.html.vue"]]);export{Y as default};
